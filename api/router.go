// Code generated by hertz generator.

package main

import (
	"context"
	"fmt"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/cloudwego/hertz/pkg/route"
	router "github.com/hltl/GoMall/api/biz/router"
	"github.com/sirupsen/logrus"
)

func register(h *server.Hertz, authClient *router.AuthClient) {
	// 添加路由列表打印
	logrus.WithFields(logrus.Fields{
		"routes": []string{
			"POST /register",
			"POST /login",
			"GET /health",
			"HEAD /health",
		},
	}).Info("注册路由列表")

	// 注册所有路由
	h.POST("/register", router.UserHandlerRegister)
	h.POST("/login", router.UserHandlerLogin)

	healthHandler := func(c context.Context, ctx *app.RequestContext) {
		ctx.Header("X-Custom-Health", "1.0")
		logrus.WithFields(logrus.Fields{
			"client_ip": ctx.ClientIP(),
			"method":    ctx.Method(),
			"path":      ctx.Path(),
			"status":    "ok",
			"version":   "1.0",
		}).Info("健康检查请求")
		ctx.JSON(200, map[string]string{
			"status":  "ok",
			"version": "1.0",
		})
	}
	h.GET("/health", healthHandler)
	h.HEAD("/health", healthHandler)
}

// 辅助函数：格式化路由信息
func getFormattedRoutes(routes route.RoutesInfo) []string {
	var formatted []string
	for _, r := range routes {
		formatted = append(formatted, fmt.Sprintf("%s %s", r.Method, r.Path))
	}
	return formatted
}
